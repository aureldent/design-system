@mixin lumx-state-high($state, $color, $theme) {
    @if $state == 'state-default' {
        @if $theme == 'dark' {
            background-color: lumx-theme-color-variant($color, 'N');
            color: lumx-theme-color-variant('light', 'N');
        } @else if $theme == 'light' {
            background-color: lumx-theme-color-variant($theme, 'N');
            color: lumx-theme-color-variant($color, 'N');
        }
    } @else if $state == 'state-hover' {
        @if $theme == 'dark' {
            background-color: lumx-theme-color-variant($color, 'D1');
        } @else if $theme == 'light' {
            background-color: lumx-theme-color-variant($theme, 'L1');
        }
    } @else if $state == 'state-active' {
        @if $theme == 'dark' {
            background-color: lumx-theme-color-variant($color, 'D2');
        } @else if $theme == 'light' {
            background-color: lumx-theme-color-variant($theme, 'L2');
        }
    } @else if $state == 'state-focus' {
        @if $theme == 'dark' {
            box-shadow: 0 0 0 2px lumx-theme-color-variant($color, 'L3');
        } @else if $theme == 'light' {
            box-shadow: 0 0 0 2px lumx-theme-color-variant($theme, 'L3');
        }
    }
}

@mixin lumx-state-medium($state, $color, $has-focus-inset: false) {
    @if $state == 'state-default' {
        background-color: lumx-theme-color-variant($color, 'L5');
        color: lumx-theme-color-variant($color, 'N');
    } @else if $state == 'state-hover' {
        background-color: lumx-theme-color-variant($color, 'L4');
    } @else if $state == 'state-active' {
        background-color: lumx-theme-color-variant($color, 'L3');
    } @else if $state == 'state-focus' {
        @if $has-focus-inset == true {
            box-shadow: inset 0 0 0 2px lumx-theme-color-variant($color, 'L3');
        } @else {
            box-shadow: 0 0 0 2px lumx-theme-color-variant($color, 'L3');
        }
    }
}

@mixin lumx-state-as-selected($state, $theme, $has-focus-inset: false) {
    @if $theme == 'dark' {
        @if $state == 'state-default' {
            background-color: lumx-theme-color-variant('primary', 'L4');
            color: lumx-theme-color-variant('primary', 'D2');
        } @else if $state == 'state-hover' {
            background-color: lumx-theme-color-variant('primary', 'L3');
        } @else if $state == 'state-active' {
            background-color: lumx-theme-color-variant('primary', 'L2');
        } @else if $state == 'state-focus' {
            @if $has-focus-inset == true {
                box-shadow: inset 0 0 0 2px lumx-theme-color-variant('primary', 'L3');
            } @else {
                box-shadow: 0 0 0 2px lumx-theme-color-variant('primary', 'L3');
            }
        }
    } @else if $theme == 'light' {
        @if $state == 'state-default' {
            background-color: lumx-theme-color-variant('light', 'L2');
            color: lumx-theme-color-variant('dark', 'N');
        } @else if $state == 'state-hover' {
            background-color: lumx-theme-color-variant('light', 'L3');
        } @else if $state == 'state-active' {
            background-color: lumx-theme-color-variant('light', 'L4');
        } @else if $state == 'state-focus' {
            @if $has-focus-inset == true {
                box-shadow: inset 0 0 0 2px lumx-theme-color-variant('light', 'L3');
            } @else {
                box-shadow: 0 0 0 2px lumx-theme-color-variant('light', 'L3');
            }
        }
    }
}

@mixin lumx-state-low($state, $color, $has-focus-inset: false) {
    @if $state == 'state-default' {
        background-color: transparent;
        color: lumx-theme-color-variant($color, 'N');
    } @else if $state == 'state-hover' {
        background-color: lumx-theme-color-variant($color, 'L5');
    } @else if $state == 'state-active' {
        background-color: lumx-theme-color-variant($color, 'L4');
    } @else if $state == 'state-focus' {
        @if $has-focus-inset == true {
            box-shadow: inset 0 0 0 2px lumx-theme-color-variant($color, 'L3');
        } @else {
            box-shadow: 0 0 0 2px lumx-theme-color-variant($color, 'L3');
        }
    }
}

@mixin lumx-state-disabled-text($theme) {
    color: lumx-theme-color-variant($theme, 'L3');
    pointer-events: none;
}

@mixin lumx-state-disabled-input() {
    opacity: 0.5;
    pointer-events: none;
}

@mixin lumx-state($state, $emphasis, $color, $theme: null, $has-focus-inset: false) {
    @if $emphasis == 'emphasis-high' {
        @include lumx-state-high($state, $color, $theme);
    } @else if $emphasis == 'emphasis-medium' {
        @include lumx-state-medium($state, $color, $has-focus-inset);
    } @else if $emphasis == 'emphasis-low' {
        @include lumx-state-low($state, $color, $has-focus-inset);
    }
}

@mixin lumx-state-transition() {
    transition-duration: $lumx-state-transition-duration;
    transition-property: background-color, box-shadow, color;
}
