{
    "author": "LumApps",
    "bugs": {
        "url": "https://github.com/lumapps/design-system/issues"
    },
    "config": {
        "commitizen": {
            "path": "./node_modules/lumapps-conventional-changelog"
        },
        "validate-commit-msg": {
            "helpMessage": "\nHere is the format for valid commit messages: \n<type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>\n\n\nThe scope must be in kebab-case\n\nIf your commit message starts with 'WIP', then no commit validation will be enforced.",
            "maxSubjectLength": 72,
            "subjectPattern": "^[a-z0-9].+[^.]$",
            "subjectPatternErrorMsg": "Commit subject is not valid. It must start with a lowercase letter or a number, be at least one word long and not end with a dot.",
            "types": "lumapps-conventional-commit-types",
            "warnOnFail": false
        }
    },
    "description": "The official LumApps Design System (LumX) for AngularJS and React applications",
    "devDependencies": {
        "lerna": "^3.18.4",
        "yeoman-generator": "^4.1.0",
        "yo": "^3.1.0"
    },
    "engines": {
        "node": ">= 10.0.0",
        "npm": ">= 4.0.0",
        "yarn": ">= 1.3.0"
    },
    "homepage": "https://github.com/lumapps/design-system",
    "husky": {
        "hooks": {
            "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
            "pre-commit": "lint-staged && changelog-verify CHANGELOG.react.md"
        }
    },
    "keywords": [
        "AngularJS",
        "Design System",
        "LumApps",
        "LumX",
        "React"
    ],
    "license": "MIT",
    "name": "@lumx/lumx",
    "private": true,
    "repository": {
        "type": "git",
        "url": "git+https://github.com/lumapps/design-system.git"
    },
    "scripts": {
        "build": "lerna run build",
        "postinstall": "lerna bootstrap",
        "start": "lerna run start",
        "setup:git-hooks": "node node_modules/husky/bin/uninstall.js && node node_modules/husky/bin/install.js",
        "scaffold": "yarn yo ./yo-generators/ --with-tests --with-demo"
    },
    "workspaces": [
        "packages/*"
    ]
}
